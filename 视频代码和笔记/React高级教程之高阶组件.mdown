#React高级教程之高阶组件

##高阶组件的定义和原理

####高阶函数的定义：

1、以函数为参数

2、返回值也是函数的函数

####高阶组件的定义：

1、接受一个组件作为参数并返回一个新组件的函数

2、高阶组件是一个函数，并不是组件


##高阶组件在项目中的常见应用

####react-redux的connect的函数就是典型的高阶组件



##高阶组件实现

###编写高阶组件

1、实现一个普通组件
2、将普通组件使用函数包裹


使用高阶组件

1、higherOrderComponent(WrappedComponent)

2、@higherOrderComponent

使用装饰器模式
npm run eject 
安装相关插件：npm install bable-preset-stage-2 —save-dev
Npm install babel-preset-react-native-stage-0 —save-dev

根目录下创建.babelrc
{
	“presets”:[“react-native-stage-0/decorator-support“]
}



###高阶组件应用

####代理方式的高阶组件
>返回的新组件类继承自React.Component类，新组件扮演的角色传入参数组件的一个代理，在新组件的render函数中，将被包裹组件渲染出来，除了高阶组件自己要做得工作，其余功能全部转手给了被包裹的组件


应用：
1、操纵props
2、通过ref访问组件实例
3、组件状态抽取
4、包装组件




####继承方式的高阶组件
采用继承关联作为参数的组件和返回的组件，假如传入的组件参数是WrappedComponent,那么返回的组件就直接继承自WrappedComponent


应用：
1、操纵props
2、操纵生命周期函数


##通用高阶组件如何封装

